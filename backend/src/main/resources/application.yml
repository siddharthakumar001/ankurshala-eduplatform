spring:
  application:
    name: ankurshala-backend
  datasource:
    url: jdbc:postgresql://${DB_HOST:postgres}:${DB_PORT:5432}/${DB_NAME:ankurshala}
    username: ${DB_USERNAME:ankur}
    password: ${DB_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: validate
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
  data:
    redis:
      host: ${REDIS_HOST:redis}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 0
  kafka:
    bootstrap-servers: ${KAFKA_BROKERS:kafka:9092}
    consumer:
      group-id: ankurshala-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer

server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /api

management:
  endpoints:
    web:
      exposure:
        include: health,info,mappings
  endpoint:
    health:
      probes:
        enabled: true

logging:
  level:
    com.ankurshala.backend: DEBUG
    org.springframework.security: DEBUG
    org.springframework.kafka: INFO

app:
  jwt:
    secret: ${JWT_SECRET:myVeryLongAndSecureSecretKeyForHS512AlgorithmThatIsAtLeast64CharactersLongAndSecure123456789} # Updated secret - must be at least 512 bits (64 bytes)
    access-token-expiration: 900  # 15 minutes
    refresh-token-expiration: 604800  # 7 days
  encryption:
    bank-key: ${BANK_ENC_KEY:DEFAULT_BANK_ENCRYPTION_KEY_CHANGE_IN_PRODUCTION_32_CHARS_MIN_FOR_AES256_SECURITY}
  dev:
    seeder:
      enabled: ${DEV_SEEDER_ENABLED:true}
  demo:
    seeder:
      enabled: ${DEMO_SEED_ON_START:false}
