# ----- rate limit zones (define ONCE) -----
limit_req_zone $binary_remote_addr zone=general:10m rate=100r/m;
limit_req_zone $binary_remote_addr zone=api:10m rate=60r/m;
limit_req_zone $binary_remote_addr zone=auth:10m rate=10r/m;

# ----- HTTP listener (80): redirect to HTTPS but keep ACME + health -----
server {
  listen 80;
  listen [::]:80;
  server_name ankurshala.com www.ankurshala.com;

  access_log /var/log/nginx/access.log;
  error_log  /var/log/nginx/error.log;

  # ACME challenge must remain on HTTP
  location ^~ /.well-known/acme-challenge/ {
    root /var/www/certbot;
    default_type "text/plain";
    try_files $uri =404;
  }

  location = /health { return 200 "ok\n"; add_header Content-Type text/plain; }

  # Everything else → HTTPS
  location / {
    return 301 https://$host$request_uri;
  }
}

# ----- HTTPS listener (443) -----
server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name ankurshala.com www.ankurshala.com;

  access_log /var/log/nginx/access.log;
  error_log  /var/log/nginx/error.log;

  ssl_certificate     /etc/letsencrypt/live/ankurshala.com/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/ankurshala.com/privkey.pem;
  ssl_session_timeout 1d;
  ssl_session_cache shared:SSL:10m;
  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_prefer_server_ciphers on;

  # Security headers
  add_header X-Frame-Options "SAMEORIGIN" always;
  add_header X-Content-Type-Options "nosniff" always;
  add_header X-XSS-Protection "1; mode=block" always;
  add_header Referrer-Policy "no-referrer-when-downgrade" always;
  # Add HSTS after you confirm HTTPS is working everywhere (then uncomment):
  # add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

  # Health on HTTPS too
  location = /health { return 200 "ok\n"; add_header Content-Type text/plain; }

  # ---- API → backend (Spring) ----
  location /api/ {
    limit_req zone=api burst=20 nodelay;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;
    proxy_pass http://backend:8080;
  }

  # ---- Frontend (Next.js) at / ----
  location / {
    limit_req zone=general burst=50 nodelay;
    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto https;
    proxy_pass http://frontend:3000;
  }
}
